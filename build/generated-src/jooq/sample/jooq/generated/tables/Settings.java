/*
 * This file is generated by jOOQ.
*/
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.SettingsRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Settings extends TableImpl<SettingsRecord> {

    private static final long serialVersionUID = 1853025958;

    /**
     * The reference instance of <code>public.settings</code>
     */
    public static final Settings SETTINGS = new Settings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SettingsRecord> getRecordType() {
        return SettingsRecord.class;
    }

    /**
     * The column <code>public.settings.guildid</code>.
     */
    public final TableField<SettingsRecord, String> GUILDID = createField("guildid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.settings.key</code>.
     */
    public final TableField<SettingsRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.settings.value</code>.
     */
    public final TableField<SettingsRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.settings</code> table reference
     */
    public Settings() {
        this("settings", null);
    }

    /**
     * Create an aliased <code>public.settings</code> table reference
     */
    public Settings(String alias) {
        this(alias, SETTINGS);
    }

    private Settings(String alias, Table<SettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Settings(String alias, Table<SettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SettingsRecord> getPrimaryKey() {
        return Keys.SETTINGS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<SettingsRecord>>asList(Keys.SETTINGS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Settings as(String alias) {
        return new Settings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Settings rename(String name) {
        return new Settings(name, null);
    }
}
