/*
 * This file is generated by jOOQ.
*/
package jooq.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.Keys;
import jooq.generated.Public;
import jooq.generated.tables.records.MutelistRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mutelist extends TableImpl<MutelistRecord> {

    private static final long serialVersionUID = 351913508;

    /**
     * The reference instance of <code>public.mutelist</code>
     */
    public static final Mutelist MUTELIST = new Mutelist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MutelistRecord> getRecordType() {
        return MutelistRecord.class;
    }

    /**
     * The column <code>public.mutelist.id</code>.
     */
    public final TableField<MutelistRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mutelist_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.mutelist.userid</code>.
     */
    public final TableField<MutelistRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mutelist.moderatoruserid</code>.
     */
    public final TableField<MutelistRecord, String> MODERATORUSERID = createField("moderatoruserid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mutelist.guildid</code>.
     */
    public final TableField<MutelistRecord, String> GUILDID = createField("guildid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mutelist.mutetime</code>.
     */
    public final TableField<MutelistRecord, Long> MUTETIME = createField("mutetime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mutelist.expiretime</code>.
     */
    public final TableField<MutelistRecord, Long> EXPIRETIME = createField("expiretime", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mutelist.reason</code>.
     */
    public final TableField<MutelistRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mutelist.expires</code>.
     */
    public final TableField<MutelistRecord, Boolean> EXPIRES = createField("expires", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.mutelist.unmuted</code>.
     */
    public final TableField<MutelistRecord, Boolean> UNMUTED = createField("unmuted", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>public.mutelist</code> table reference
     */
    public Mutelist() {
        this("mutelist", null);
    }

    /**
     * Create an aliased <code>public.mutelist</code> table reference
     */
    public Mutelist(String alias) {
        this(alias, MUTELIST);
    }

    private Mutelist(String alias, Table<MutelistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mutelist(String alias, Table<MutelistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MutelistRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MUTELIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MutelistRecord> getPrimaryKey() {
        return Keys.MUTELIST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MutelistRecord>> getKeys() {
        return Arrays.<UniqueKey<MutelistRecord>>asList(Keys.MUTELIST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mutelist as(String alias) {
        return new Mutelist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mutelist rename(String name) {
        return new Mutelist(name, null);
    }
}
